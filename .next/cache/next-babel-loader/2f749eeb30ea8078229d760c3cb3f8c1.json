{"ast":null,"code":"import \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/auto-complete/style\";\nimport _AutoComplete from \"antd/lib/auto-complete\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/Users/friday/web_dev/sir-shallum/components/clientComponents/registrationForms/SignUpForm.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nvar FormItem = _Form.Item;\nvar Option = _Select.Option;\nvar AutoCompleteOption = _AutoComplete.Option;\nvar MainLayout = styled.div.withConfig({\n  displayName: \"SignUpForm__MainLayout\",\n  componentId: \"sy4mh2-0\"\n})([\"height:100%;padding:2%;h1{text-align:center;}\"]);\n\nvar SignUpForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignUpForm, _React$Component);\n\n  function SignUpForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignUpForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignUpForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      confirmDirty: false,\n      autoCompleteResult: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log(\"Received values of form: \", values);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleConfirmBlur\", function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkPassword\", function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue(\"password\")) {\n        callback(\"Two passwords that you enter is inconsistent!\");\n      } else {\n        callback();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkConfirm\", function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields([\"confirm\"], {\n          force: true\n        });\n      }\n\n      callback();\n    });\n\n    return _this;\n  }\n\n  _createClass(SignUpForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var autoCompleteResult = this.state.autoCompleteResult;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 6\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 14\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 14,\n            offset: 6\n          }\n        }\n      };\n      var prefixSelector = getFieldDecorator(\"prefix\", {\n        initialValue: \"+639\"\n      })(__jsx(_Select, {\n        style: {\n          width: 75\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, __jsx(Option, {\n        value: \"639\",\n        \"default\": true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"+639\")));\n      return __jsx(MainLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Sign Up\"), __jsx(_Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, __jsx(FormItem, _extends({}, formItemLayout, {\n        label: \"E-mail\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), getFieldDecorator(\"email\", {\n        rules: [{\n          type: \"email\",\n          message: \"The input is not valid E-mail!\"\n        }, {\n          required: true,\n          message: \"Please input your E-mail!\"\n        }]\n      })(__jsx(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }))), __jsx(FormItem, _extends({}, formItemLayout, {\n        label: __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, \"Full Name\\xA0\"),\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), getFieldDecorator(\"fullName\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Full Name!\",\n          whitespace: true\n        }]\n      })(__jsx(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }))), __jsx(FormItem, _extends({}, formItemLayout, {\n        label: \"Password\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), getFieldDecorator(\"password\", {\n        rules: [{\n          required: true,\n          message: \"Please input your password!\"\n        }, {\n          validator: this.checkConfirm\n        }]\n      })(__jsx(_Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }))), __jsx(FormItem, _extends({}, formItemLayout, {\n        label: \"Confirm Password\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), getFieldDecorator(\"confirm\", {\n        rules: [{\n          required: true,\n          message: \"Please confirm your password!\"\n        }, {\n          validator: this.checkPassword\n        }]\n      })(__jsx(_Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }))), __jsx(FormItem, _extends({}, formItemLayout, {\n        label: \"Phone Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), getFieldDecorator(\"phone\", {\n        rules: [{\n          required: true,\n          message: \"Please input your phone number!\"\n        }]\n      })(__jsx(_Input, {\n        addonBefore: prefixSelector,\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }))), __jsx(FormItem, _extends({}, formItemLayout, {\n        label: __jsx(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Address\\xA0\"),\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), getFieldDecorator(\"address\", {\n        rules: [{\n          required: true,\n          message: \"Please input your Address\",\n          whitespace: true\n        }]\n      })(__jsx(_Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }))), __jsx(FormItem, _extends({}, formItemLayout, {\n        label: \"Captcha\",\n        extra: \"We must make sure that your are a human.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), __jsx(_Row, {\n        gutter: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, __jsx(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, getFieldDecorator(\"captcha\", {\n        rules: [{\n          required: true,\n          message: \"Please input the captcha you got!\"\n        }]\n      })(__jsx(_Input, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }))), __jsx(_Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, __jsx(_Button, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Get captcha\")))), __jsx(FormItem, _extends({}, tailFormItemLayout, {\n        style: {\n          marginBottom: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), getFieldDecorator(\"agreement\", {\n        valuePropName: \"checked\"\n      })(__jsx(_Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"I have read the \", __jsx(\"a\", {\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"agreement\")))), __jsx(FormItem, _extends({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }), __jsx(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Sign Up!\"))));\n    }\n  }]);\n\n  return SignUpForm;\n}(React.Component);\n\nvar WrappedSignUpForm = _Form.create()(SignUpForm);\n\nexport default WrappedSignUpForm;","map":{"version":3,"sources":["/Users/friday/web_dev/sir-shallum/components/clientComponents/registrationForms/SignUpForm.js"],"names":["React","styled","FormItem","Item","Option","AutoCompleteOption","MainLayout","div","SignUpForm","confirmDirty","autoCompleteResult","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","value","target","setState","state","rule","callback","getFieldValue","validateFields","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","handleSubmit","rules","type","message","required","whitespace","validator","checkConfirm","checkPassword","handleConfirmBlur","marginBottom","valuePropName","Component","WrappedSignUpForm","create"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete\n} from \"antd\";\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst AutoCompleteOption = AutoComplete.Option;\n\nconst MainLayout = styled.div`\n  height: 100%;\n  padding: 2%;\n  h1 {\n    text-align: center;\n  }\n`;\n\nclass SignUpForm extends React.Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: []\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  checkPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"Two passwords that you enter is inconsistent!\");\n    } else {\n      callback();\n    }\n  };\n\n  checkConfirm = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { autoCompleteResult } = this.state;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 14 }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 14,\n          offset: 6\n        }\n      }\n    };\n    const prefixSelector = getFieldDecorator(\"prefix\", {\n      initialValue: \"+639\"\n    })(\n      <Select style={{ width: 75 }}>\n        <Option value=\"639\" default>\n          +639\n        </Option>\n      </Select>\n    );\n\n    return (\n      <MainLayout>\n        <h1>Sign Up</h1>\n        <Form onSubmit={this.handleSubmit}>\n          <FormItem {...formItemLayout} label=\"E-mail\" hasFeedback>\n            {getFieldDecorator(\"email\", {\n              rules: [\n                {\n                  type: \"email\",\n                  message: \"The input is not valid E-mail!\"\n                },\n                {\n                  required: true,\n                  message: \"Please input your E-mail!\"\n                }\n              ]\n            })(<Input />)}\n          </FormItem>\n          <FormItem\n            {...formItemLayout}\n            label={<span>Full Name&nbsp;</span>}\n            hasFeedback\n          >\n            {getFieldDecorator(\"fullName\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your Full Name!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"Password\" hasFeedback>\n            {getFieldDecorator(\"password\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your password!\"\n                },\n                {\n                  validator: this.checkConfirm\n                }\n              ]\n            })(<Input type=\"password\" />)}\n          </FormItem>\n          <FormItem {...formItemLayout} label=\"Confirm Password\" hasFeedback>\n            {getFieldDecorator(\"confirm\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please confirm your password!\"\n                },\n                {\n                  validator: this.checkPassword\n                }\n              ]\n            })(<Input type=\"password\" onBlur={this.handleConfirmBlur} />)}\n          </FormItem>\n\n          <FormItem {...formItemLayout} label=\"Phone Number\">\n            {getFieldDecorator(\"phone\", {\n              rules: [\n                { required: true, message: \"Please input your phone number!\" }\n              ]\n            })(\n              <Input addonBefore={prefixSelector} style={{ width: \"100%\" }} />\n            )}\n          </FormItem>\n          <FormItem\n            {...formItemLayout}\n            label={<span>Address&nbsp;</span>}\n            hasFeedback\n          >\n            {getFieldDecorator(\"address\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your Address\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </FormItem>\n          <FormItem\n            {...formItemLayout}\n            label=\"Captcha\"\n            extra=\"We must make sure that your are a human.\"\n          >\n            <Row gutter={8}>\n              <Col span={12}>\n                {getFieldDecorator(\"captcha\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input the captcha you got!\"\n                    }\n                  ]\n                })(<Input size=\"large\" />)}\n              </Col>\n              <Col span={12}>\n                <Button size=\"large\">Get captcha</Button>\n              </Col>\n            </Row>\n          </FormItem>\n          <FormItem {...tailFormItemLayout} style={{ marginBottom: 8 }}>\n            {getFieldDecorator(\"agreement\", {\n              valuePropName: \"checked\"\n            })(\n              <Checkbox>\n                I have read the <a href=\"\">agreement</a>\n              </Checkbox>\n            )}\n          </FormItem>\n          <FormItem {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\" block>\n              Sign Up!\n            </Button>\n          </FormItem>\n        </Form>\n      </MainLayout>\n    );\n  }\n}\n\nconst WrappedSignUpForm = Form.create()(SignUpForm);\n\nexport default WrappedSignUpForm;\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"file":"static/webpack/static/development/pages/index.js.14bbd7f6c5681ca87c78.hot-update.js","sources":["webpack:///./components/clientComponents/registrationForms/SignInForm.js"],"sourcesContent":["import React from \"react\";\nimport { Form, Icon, Input, Button, Checkbox } from \"antd\";\nimport styled from \"styled-components\";\nimport SignUpForm from \"./SignUpForm\";\n\nconst MainLayout = styled.div`\n  height: 100%;\n  padding: 5%;\n  h1 {\n    text-align: center;\n  }\n`;\n\nclass SignInForm extends React.Component {\n  state = {\n    showSignUpForm: false\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  };\n\n  renderForm() {\n    const { getFieldDecorator } = this.props.form;\n    if (!this.state.showSignUpForm) {\n      return (\n        <div>\n          <h1>Sign In</h1>\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <Form.Item>\n              {getFieldDecorator(\"username\", {\n                rules: [\n                  { required: true, message: \"Please input your username!\" }\n                ]\n              })(\n                <Input\n                  size=\"large\"\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Username\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  { required: true, message: \"Please input your Password!\" }\n                ]\n              })(\n                <Input\n                  size=\"large\"\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                {getFieldDecorator(\"remember\", {\n                  valuePropName: \"checked\",\n                  initialValue: true\n                })(<Checkbox>Remember me</Checkbox>)}\n                <a className=\"login-form-forgot\" href=\"\">\n                  Forgot password\n                </a>\n              </div>\n              <div>\n                <Button\n                  size=\"large\"\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                  block\n                >\n                  Log in\n                </Button>\n              </div>\n              <div style={{ marginTop: \"2%\" }}>\n                <Button\n                  size=\"large\"\n                  type=\"default\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                  block\n                >\n                  Dont have an account yet? Register Now!\n                </Button>\n              </div>\n            </Form.Item>\n          </Form>\n        </div>\n      );\n    } else {\n      <div>sign up</div>;\n    }\n  }\n\n  render() {\n    return <MainLayout>{this.renderForm()}</MainLayout>;\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: \"sign_in\" })(SignInForm);\n\nexport default WrappedNormalLoginForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AA/FA;AACA;AAiGA;AAAA;AAAA;AACA;AACA;;;;A","sourceRoot":""}